service: encouragement-now-api

plugins:
    - serverless-dotenv-plugin
    - serverless-offline
    - serverless-plugin-optimize
    - serverless-plugin-typescript

provider:
    name: aws
    runtime: nodejs12.x
    stage: dev
    region: us-west-2
    tracing:
        lambda: true
    environment:
        DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-user
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

custom:
    dotenv:
        path: ./.env
        logging: false
        include:
            - ACCOUNT_SID
            - AUTH_TOKEN
            - GIPHY_KEY
            - PHONE_NUMBER

resources:
    Resources:
        UserPhoneTable:
            Type: 'AWS::DynamoDB::Table'
            Properties:
                TableName: ${self:provider.environment.DYNAMODB_TABLE}
                AttributeDefinitions:
                    - AttributeName: phone
                      AttributeType: S
                KeySchema:
                    - AttributeName: phone
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                GlobalSecondaryIndexes:
                    - IndexName: phone-index
                      KeySchema:
                          - AttributeName: phone
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 1
                          WriteCapacityUnits: 1
                BillingMode: PROVISIONED

functions:
    registerUser:
        handler: src/lambdas/registerUser/handler.handler
        tracing: Active
        environment:
            ACCOUNT_SID: ${env:ACCOUNT_SID}
            AUTH_TOKEN: ${env:AUTH_TOKEN}
        events:
            - http:
                  path: registeruser
                  method: post
                  integration: lambda-proxy
                  cors: true
    sendText:
        handler: src/lambdas/sendText/handler.handler
        tracing: PassThrough
        environment:
            ACCOUNT_SID: ${env:ACCOUNT_SID}
            AUTH_TOKEN: ${env:AUTH_TOKEN}
            GIPHY_KEY: ${env:GIPHY_KEY}
            PHONE_NUMBER: ${env:PHONE_NUMBER}
        events:
            - http:
                  path: sendtext
                  method: post
                  integration: lambda-proxy
                  cors: true
